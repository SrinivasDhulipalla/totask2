apply plugin: "java"
apply plugin: "spring-boot"

apply plugin: "eclipse"

apply plugin: "checkstyle"   // not yet ready for closures
apply plugin: "findbugs"     
apply plugin: "pmd"
apply plugin: "jacoco"
apply plugin: "jdepend"

apply plugin: "build-dashboard"
apply plugin: "org.asciidoctor.gradle.asciidoctor"

repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
        
        maven{url "http://jasperreports.sourceforge.net/maven2/"}
        maven{url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"}
}

buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.1.7.RELEASE'  
	    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:0.7.3'
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ch.qos.logback:logback-classic'
    
    compile "org.springframework:spring-context:4.1.1.RELEASE"
    compile "org.springframework:spring-context-support:4.1.1.RELEASE"
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.1.7.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-web:1.1.7.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.1.7.RELEASE")
    
    compile("com.h2database:h2")
    
  /*  compile("org.liquibase:liquibase-core") */
        	
    testCompile("org.springframework.boot:spring-boot-starter-test:1.1.7.RELEASE")  
    
    compile "net.sf.jasperreports:jasperreports:5.6.0"  
    compile "org.apache.poi:poi:3.7"
}


jdependMain {
   reports {
      xml.enabled  false
      text.enabled true
   }
}
jdependTest {
   reports {
      xml.enabled  false  
      text.enabled true
   }
}

findbugs {
        toolVersion = "3.0.0"
        ignoreFailures = true
        effort = "max"
        reportLevel = "high"
}

checkstyle {
   ignoreFailures = true      
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}

asciidoctor {
    outputDir = new File("$buildDir/docs/asciidoc")
    logDocuments = true
} 


